version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
      - VERSION=1.0.0
    container_name: api
    environment:
      - CONFIG=config.yaml
    ports:
      - "8080:8080"
      - "8000:8000"
    depends_on:
      - postgres
      - grafana
      - jaeger
      - prometheus
    volumes:
      - ./config.yaml:/app/config.yaml

  postgres:
    image: postgres:14.4
    container_name: postgres
    restart: unless-stopped
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=fizzbuzz
      - POSTGRES_HOST=5432
    command: -p 5432
    volumes:
      - pg_data_prod:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus
    restart: unless-stopped
    volumes:
        - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
        - "9090:9090"
  
  grafana:
    image: grafana/grafana:8.2.2
    container_name: grafana
    restart: unless-stopped
    ports:
        - ${GRAFANA_PORT:-3000}:3000
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin

  jaeger:
    image: jaegertracing/all-in-one:1.35
    container_name: jaeger
    restart: unless-stopped
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"

volumes:
  pg_data_prod: